/*
 * Copyright (c) 2025
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <10>;
        rows = <4>;

        map = <
            RC(0,9) RC(0,8) RC(0,7) RC(0,6) RC(0,5) RC(0,4) RC(0,3) RC(0,2) RC(0,1) RC(0,0)
            RC(1,9) RC(1,8) RC(1,7) RC(1,6) RC(1,5) RC(1,4) RC(1,3) RC(1,2) RC(1,1) RC(1,0)
            RC(2,9) RC(2,8) RC(2,7) RC(2,6) RC(2,5) RC(2,4) RC(2,3) RC(2,2) RC(2,1) RC(2,0)
                            RC(3,7) RC(3,6) RC(3,5) RC(3,4) RC(3,3) RC(3,2)
        >;
    };

    keys {
        compatible = "gpio-keys";
        soft_off_gpio_key: soft_off_gpio_key {
            gpios = <&gpio0 17 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
        };
    };

    wakeup_scan: wakeup_scan {
        compatible = "zmk,gpio-key-wakeup-trigger";
        trigger = <&soft_off_gpio_key>;
        wakeup-source;
        extra-gpios = <&gpio0 31 GPIO_ACTIVE_HIGH>;
    };

    soft_off_wakers {
        compatible = "zmk,soft-off-wakeup-sources";
        wakeup-sources = <&wakeup_scan>;
    };

    // Alias so nice_view.overlay can find it
    aliases {
        nice-view-spi = &spi0;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";
        wakeup-source;
        
        row-gpios
            = <&gpio0 17 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // ROW0 - D2 (left side)
            , <&gpio0 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // ROW1 - D3 (left side)
            , <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // ROW2 - D4 (left side)
            , <&gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // ROW3 - D5 (left side)
            ;
        
        col-gpios
            = <&gpio0 31 GPIO_ACTIVE_HIGH>  // COL0 - D21 (right side)
            , <&gpio0 29 GPIO_ACTIVE_HIGH>  // COL1 - D20 (right side)
            , <&gpio0 2  GPIO_ACTIVE_HIGH>  // COL2 - D19 (right side)
            , <&gpio1 15 GPIO_ACTIVE_HIGH>  // COL3 - D18 (right side)
            , <&gpio1 13 GPIO_ACTIVE_HIGH>  // COL4 - D15 (right side)
            , <&gpio1 11 GPIO_ACTIVE_HIGH>  // COL5 - D14 (left side)
            , <&gpio0 10 GPIO_ACTIVE_HIGH>  // COL6 - D16 (left side)
            , <&gpio0 9  GPIO_ACTIVE_HIGH>  // COL7 - D10 (left side)
            , <&gpio0 6  GPIO_ACTIVE_HIGH>  // COL8 - D1 (left side)
            , <&gpio0 8  GPIO_ACTIVE_HIGH>  // COL9 - D0 (left side)
            ;
    };
};

// SPI configuration
&pinctrl {
    spi0_default: spi0_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 1, 4)>,     // SCK on P1.04 (D8)
                    <NRF_PSEL(SPIM_MOSI, 1, 6)>,    // MOSI on P1.06 (D9)
                    <NRF_PSEL(SPIM_MISO, 0, 26)>;   // MISO on P0.26 (unused but required)
        };
    };

    spi0_sleep: spi0_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 1, 4)>,
                    <NRF_PSEL(SPIM_MOSI, 1, 6)>,
                    <NRF_PSEL(SPIM_MISO, 0, 26)>;
            low-power-enable;
        };
    };
};

&spi0 {
    status = "okay";
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi0_default>;
    pinctrl-1 = <&spi0_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&gpio0 11 GPIO_ACTIVE_HIGH>;  // CS on P0.11 (D7)

    ls0xx: ls0xx@0 {
        compatible = "sharp,ls0xx";
        label = "DISPLAY";
        spi-max-frequency = <2000000>;
        reg = <0>;
        width = <160>;
        height = <68>;
    };
};

// Create the nice_view_spi label that nice_view.overlay expects
nice_view_spi: &spi0 {};
